=> Normal Functions implement the descriptor protocol

-> to Check the object/instance namespace, use :- `__dict__`

______________________________


* new() vs init():
  ------------  
   __new__ :- call to create object 
   __init__ :- to add attrib to that object

   new :- return object 
   init :- do not return anything

   generlly signature of both are same

   new :- is a class method     (cls)
   init :- is a instance method (self)

   => Always remember to return something from new (as that is its job)

   new :- Change how obj is created


   init :- when called obj is already created 
   
   So if you want to perform anything during or before object creation use __new__ 
   else you can go with __init__

   So __new__ is often used when to deal with immutable object 
   as immutable obj cannot be altered once created 

* classmethod & staticmethod 
  ----------------
   to call classmethod from innstance method use :- type(self).classMethodName()

   static methods :- dont pass any argument as first argument like `self` or `cls` 
                     Those are just regular function but 
                     we put them inside class just because they have some logical relation with them 
                     

* Class OOPs concepts also follow namespace :
  --------------
   First look at instance namespace (ie __dict__)
                 class namesapce    
                 parent class namespace (ie inheritance)


          